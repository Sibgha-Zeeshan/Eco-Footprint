"""Add auto-increment to user_id

Revision ID: 3477d4d7b0cf
Revises: 
Create Date: 2024-07-05 01:14:16.932080

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3477d4d7b0cf'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('emission_factors',
    sa.Column('factor_id', sa.String(), nullable=False),
    sa.Column('activity_type', sa.String(), nullable=False),
    sa.Column('emission_factor', sa.Float(precision=53), nullable=False),
    sa.PrimaryKeyConstraint('factor_id')
    )
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('profile_info', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('achievements',
    sa.Column('achievement_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('achievement_type', sa.String(), nullable=False),
    sa.Column('date_awarded', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('achievement_id')
    )
    op.create_table('activity_logs',
    sa.Column('log_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('activity_type', sa.String(), nullable=False),
    sa.Column('activity_value', sa.Float(precision=53), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('log_id')
    )
    op.create_table('goals',
    sa.Column('goal_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('target_reduction', sa.Float(precision=53), nullable=False),
    sa.Column('deadline', sa.DateTime(), nullable=False),
    sa.Column('achieved', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('goal_id')
    )
    op.create_table('reports',
    sa.Column('report_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('report_data', sa.String(), nullable=False),
    sa.Column('generated_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('report_id')
    )
    op.create_table('tips',
    sa.Column('tip_id', sa.String(), nullable=False),
    sa.Column('tip_text', sa.String(), nullable=False),
    sa.Column('category', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('tip_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tips')
    op.drop_table('reports')
    op.drop_table('goals')
    op.drop_table('activity_logs')
    op.drop_table('achievements')
    op.drop_table('users')
    op.drop_table('emission_factors')
    # ### end Alembic commands ###
